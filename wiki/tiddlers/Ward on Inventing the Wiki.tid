created: 20180406205528136
modified: 20180406205650076
title: Ward on Inventing the Wiki
tmap.id: 4c7e33e6-7ae0-4bf9-b902-750be13255dc
type: text/vnd.tiddlywiki

//Transcript of [[Wikimedia Foundation Interview with Ward Cunningham, Inventor of the Wiki|https://www.youtube.com/watch?v=XqxwwuUdsp4]]//

Wiki is collaborative software.

I made it on the web and allowed people to come to a website and create something.

I think what's really turned out is that people discover that they can create something with other people that they don't even know, but they come to trust and they make something that surprises them, all of them, in terms of its value.

HyperCard was a kind of a drawing program where you could draw a bunch of pages, a bunch of screens, and then cause one screen to link to another.

And I, well nobody, knew what hypertext was then so it was kind of hard to figure out, "Well, what are you supposed to do with this?"

And I liked that idea of having something that kind of challenges you and I like to figure out what to do with things. So I thought, well I'll make a bunch of cards about how ideas move through my company.

An interesting thing about it was that it assumed that if you wanted to make a link, if you wanted a button on one card to go to another card, you would know what other card and it would already exist. And, when I was asking people to tell me about how ideas move through the company, they were always talking about moving to a company someplace that there wasn't a card for. So I just made it so that you could type the name of something and when you press the button to go to the link, if it wasn't there, it made the card. And that 'making it on-demand' let you move around a hypertext and when you got to the edge of it, it would just push that edge out farther. And so I could tackle a subject that's unimaginably large, every idea in my whole company, but people who knew about ideas would just follow it around, they'd go from card to card until they went to some place they got to the edge...but they went to the edge because they knew about that edge, they wanted to see what I said about it, and what my program said is, "I don't know about this tell me something about this." And they just loved to write. In fact, in HyperCard people would come sit at my desk and they'd want a demo of HyperCard and I'd show them this program and they wouldn't leave.

I had a pet theory that that engineers wouldn't use an idea unless they'd seen it work before, that they were basically conservative and so ideas were slow to be absorbed and so I was interested in how ideas moved around in communities. And that notion was more important than any particular hypertext but we had held some conferences, we called it the Pattern Languages of Programming Conference or Pattern Languages of Programs and had a hundred people come out to the University of Illinois...this was at the summer of 1994 and talked about how we needed to write about computer programs in a different way so that we captured these ideas and why people decided an idea was good or bad and then my friends said oh let me show you this new thing called the World Wide Web...the University of Illinois, right, they created the first graphical browser and they showed this to me and they said, Ward, we think you need to make a hypertext pattern repository.

Well, of course, I thought. I've done this before with the HyperCard and I just needed to move it over to the web and then I wouldn't have people sitting around my desk because it was the web...it was international, so it solved that problem. And, could I do it? Could I get forms? And I had to make up this idea of markup because I had to account for the fact that I didn't have the buttons that I had in HyperCard. It's a different system but I made markup and then I tried it and I sat there and I started typing stuff in and it was as much fun as I remember. I knew when it was fun to do it in HyperCard, I knew people wouldn't leave my desk, but I could sit there on the web and I said I've got it. This is the feeling. I pay attention to what it feels like to use computer programs and it felt right, so I knew it was important. I knew it would serve the purpose which I wanted to talk about ideas, again in computer programming, so the audience I was imagining was people just like me.

People were very surprised or in fact sometimes people would send me email and say, "Well I don't want to mention it, but you've got a terrible bug in your system it lets people write anything". Or they would say, "you've got a mistake on this page" and they would send me an email telling me what the mistake was and what I should have said instead. And, to encourage them, I would just take their email and and paste it into the wiki and then send them a pointer to the page. It says, well I took the liberty of taking your message and putting it in the wiki for you but you could have done it yourself. And I babysat the community that way for a couple of years. The other thing is because I didn't have any notion...I encourage people not to to sign their works. I thought, your words, your ideas are a gift to the community and you shouldn't be claiming credit for it just because then nobody else is going to improve it. They're gonna feel it's yours. So I discouraged that, and I used that a lot myself. I did probably 80% of my editing anonymously, and that just let people feel that, well, there's a large community here. There's all this back and forth and it has a consistency because I wrote a lot of it. But that's a bootstrapping problem...I had to make it feel like there was a community to attract a community and people poured in. The other thing is I invited people with the most recognizable names and so when they showed up and wrote something, they only had to write a page or two because somebody else who's less well-known would say, "Oh, he's here! I should be here!". So there's kind of a stroke of vanity.

Well, I might have been wrong on some of this stuff I mean, sometimes people really feel if they aren't gonna get credit for what they write, they don't want to write.

But what I was encouraging is people to recognize that they're gifting their words, it's just an idea and ideas are cheap. And when people would write something and come back later and find that their words had improved, I mean that's pretty exciting. You see, boy overnight this got better who made this better and it's almost a mystery because they didn't sign it either, it's like, "Oh, the wiki made this better!" And it was, well, you're not used to things getting better on their own.

A classic thing on computer communication boards and that at the time was you would write something and somebody would spot a spelling error, and so they would say, "You spelled it this like this and it spells that..." And because the only place you could write was at the bottom, you could add but you couldn't change. And so you write something and you come back and you all you find is tedious complaining about what you said.

Now in my system, you write a spelling error, somebody just fixes it. And you come back and you don't even notice it was there. But you find this one sentence that somebody added that really gets at something you were trying to say, and so you get the positive stands out and the negative is just erased. Now the nice thing there is if somebody comes along in the meantime and his reading, who knows less than you, they might find your partial answer valuable. So this is this idea that you start, every thought is kind of a seed and it just grows and grows and grows. And it's been used very effectively on Wikipedia but it was very important on my wiki which was really about changing the way people talk about computer programs because there wasn't anything other than people's direct experience to fall back on. So as people would write about their experience programming, people would read it and it's the first time they had ever read somebody talking about, say, being afraid that they wouldn't be able to get the program done and how that changed the decisions they made out of fear. Or how they found a way to work with somebody else and find the thing that is acceptable to both. Lots of aspects.

We were very interested in how computer programs could form in an emergent way where you didn't have a master plan for the computer program. You say, well we have a general idea what we want to do and you know some of it and I know some of it and Joe knows some of it, but we're all going to work together and just let the program grow. Well, to talk about something like that, which was unheard of at the time in computer programming in an environment, in a text system, in a discussion board that had the same property...well, it was a demonstration of the very concept that we were trying to explore for computer programming. And it is true in computer programming, we see it all the time and it's accepted now, but it was considered foolishness when we started and now it's recognized as really the only way to make a really great program.

It was my first Hawaiian word that I learned as they were trying to direct me to the Wiki Wiki bus between terminals. And wiki is a Hawaiian word that means 'quick' and so wiki wiki means 'very quick' so it's the 'very quick web'. It's always been _technically_ called WikiWikiWeb but, when I wrote the script, the CGI script, that made it work, it was on a UNIX system and of course on UNIX you always use abbreviations and lowercase, so I called it wiki.cgi in UNIX.
And so most people didn't want to bother to say WikiWikiWeb they just called it "wiki". And that's fine with me. So it's like saying, "Oh, here's a system called, 'quick'.

If you need more minds...if one person knows everything, and they can kind of sit back and really think deeply, they can see the whole program and just write it down. Or write a poem...poetry is one of those things that's personal enough that if you write a poem a day after 30 years you're a great poet, and it's probably a solo thing. But computer programs and encyclopedias are of a scale that you have to make it a collaborative effort. And then to make it good, to make it read like it was from a single mind, is the challenge. And that's where people have to learn how to complement each other or, I like to say, play to each other strengths where you take what you're good at and I take what I'm good at, and we find a way to fit it together to make like we were one Superman and that...that happens...it's not that hard.

There is a style of working together where we'll agree ahead of time that you'll do this part and I'll do this part and if you don't hold up your end of the deal, then I'm gonna take you to court or something like that. That's this contracting style stuff and I think that's better than competition, but it only works for things where you know where you're going in the end, you know what the whole is going to be. And then that's a useful way to work.

But because people who were funding computer programs they thought, well that's how we want it to work this way. If I'm gonna pay you for six months to write a computer program, I want to know what you're gonna do and you're gonna do and you're gonna do,  and it was the master plan. And it turns out that that uses a small percentage of the capability of the computer. The computer is much better if you let it become what it really wants to be or the best that you can make it. And that has this sort of sense of faith, you have to believe that it's going to come out even though you can't say what it is. I mean if somebody decided what the pages of Wikipedia were going to be at the beginning of the project, they would have made a list of important sounding pages and there would have been all kinds of stuff that people love in there that they wouldn't have thought of.

I got this kind of 'grow from the center out' kind of dynamic right for a hypertext document on the web and that's been a model of sharing. And it involves...you can learn enough about each other to develop this trust relationship, but there's a couple of things that Wikipedia did right that didn't even occur to me, for example, getting the licensing right. I was careless about the licensing and I think that saying, this has to be licensed this way, here's the ownership, here's the guarantees going forward...that's important and I just wasn't interested in that stuff so I didn't do that right.

Interviewer: "Can you explain what that means?"

The openness...I was open but there was no guarantee that it was open there was no agreement when somebody submitted. There was an expectation, but it wasn't written down. And, in fact, I think when I finally did write it down I said, well I own it and you had the right to use it but you can't keep it. And that's that's not really open. But I think Jimmy Wales relationship with Richard Stallman got that right.

The other thing that I just didn't think about or I thought would be too hard was being international. The fact that because it's licensed to be reused, of course, that means the content is free to go into other languages and the fact that people might read one and want to write in their own language and that international aspect I think is profound. In terms of actually having an opportunity to in some sense bring the world together...the Wikipedia is probably one of the strongest forces in computers for creating peace in the world. In that sense it's fabulous, this understanding. And, to just believe that it could be done in every language...

When you find yourself reading an encyclopedia that is about the things you care about because it was written by people just like you talking about what they care about and that caring becomes so important to you. You trust this. Well the fact that that same sort of interaction is happening in a lot of different cultures...
Now we could talk about edit wars and stuff like that, but what really is happening is that there there are people who are moving back and forth between different languages, the people who are fortunate enough to know and understand multiple cultures can, in this world, just carry little bits of culture back and forth. And when I read something even in the English Wikipedia
and I see some mention of where the airplane was really invented or something like that...it's broad, in a sense, that because people who have a worldly view when I'm unfortunately not very worldly, but have a worldly view have shared their worldly view. And part of it is because they got involved with their language. So English is a big one but it's even more important if you have more obscure languages. It makes you part of one world...one world of ideas. And that idea that every language is important just as every person is important too.